service: import-service-s3-aws
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  stage: dev
  region: eu-west-1

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::import-service-s3-aws"
    - Effect: "Allow"
      Action: "s3:*"
      Resource:
        - "arn:aws:s3:::import-service-s3-aws/*"
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
      Ref: SNSTopic

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: product-queue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: NEW_PRODUCT_NOTIFIER
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: artem_blazhko@epam.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          status:
            - success
  Outputs:
    CatalogItemsQueueUrl:
      Value:
        Ref: CatalogItemsQueue
      Export:
        Name: CatalogItemsQueueUrl
    CatalogItemsQueueArn:
      Value:
        Fn::GetAtt: [CatalogItemsQueue, Arn]
      Export:
        Name: CatalogItemsQueueArn

functions:
  import-product-file:
    handler: handler.importProductFile
    events:
      - http:
        path: import
        method: get
        cors: true
        request:
          parameters:
            querystrings:
              name: true

  import-file-parser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: import-service-s3-aws
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

  catalog-batch-process:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
        batchSize: 5
        arn:
          Fn::GetAtt:
            - CatalogItemsQueue
            - Arn

